# CMake generated Testfile for 
# Source directory: D:/PitonMert/GitHub/sat_solver_ai
# Build directory: D:/PitonMert/GitHub/sat_solver_ai/build
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(empty_clauses "D:/PitonMert/GitHub/sat_solver_ai/build/sat_solver_ai" "D:/PitonMert/GitHub/sat_solver_ai/test/empty_clauses.cnf")
  set_tests_properties(empty_clauses PROPERTIES  _BACKTRACE_TRIPLES "D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;28;add_test;D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(empty_clauses "D:/PitonMert/GitHub/sat_solver_ai/build/sat_solver_ai" "D:/PitonMert/GitHub/sat_solver_ai/test/empty_clauses.cnf")
  set_tests_properties(empty_clauses PROPERTIES  _BACKTRACE_TRIPLES "D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;28;add_test;D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(empty_clauses "D:/PitonMert/GitHub/sat_solver_ai/build/sat_solver_ai" "D:/PitonMert/GitHub/sat_solver_ai/test/empty_clauses.cnf")
  set_tests_properties(empty_clauses PROPERTIES  _BACKTRACE_TRIPLES "D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;28;add_test;D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(empty_clauses "D:/PitonMert/GitHub/sat_solver_ai/build/sat_solver_ai" "D:/PitonMert/GitHub/sat_solver_ai/test/empty_clauses.cnf")
  set_tests_properties(empty_clauses PROPERTIES  _BACKTRACE_TRIPLES "D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;28;add_test;D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;0;")
else()
  add_test(empty_clauses NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(hard_unsat "D:/PitonMert/GitHub/sat_solver_ai/build/sat_solver_ai" "D:/PitonMert/GitHub/sat_solver_ai/test/hard_unsat.cnf")
  set_tests_properties(hard_unsat PROPERTIES  _BACKTRACE_TRIPLES "D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;28;add_test;D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(hard_unsat "D:/PitonMert/GitHub/sat_solver_ai/build/sat_solver_ai" "D:/PitonMert/GitHub/sat_solver_ai/test/hard_unsat.cnf")
  set_tests_properties(hard_unsat PROPERTIES  _BACKTRACE_TRIPLES "D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;28;add_test;D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(hard_unsat "D:/PitonMert/GitHub/sat_solver_ai/build/sat_solver_ai" "D:/PitonMert/GitHub/sat_solver_ai/test/hard_unsat.cnf")
  set_tests_properties(hard_unsat PROPERTIES  _BACKTRACE_TRIPLES "D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;28;add_test;D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(hard_unsat "D:/PitonMert/GitHub/sat_solver_ai/build/sat_solver_ai" "D:/PitonMert/GitHub/sat_solver_ai/test/hard_unsat.cnf")
  set_tests_properties(hard_unsat PROPERTIES  _BACKTRACE_TRIPLES "D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;28;add_test;D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;0;")
else()
  add_test(hard_unsat NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(medium_sat "D:/PitonMert/GitHub/sat_solver_ai/build/sat_solver_ai" "D:/PitonMert/GitHub/sat_solver_ai/test/medium_sat.cnf")
  set_tests_properties(medium_sat PROPERTIES  _BACKTRACE_TRIPLES "D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;28;add_test;D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(medium_sat "D:/PitonMert/GitHub/sat_solver_ai/build/sat_solver_ai" "D:/PitonMert/GitHub/sat_solver_ai/test/medium_sat.cnf")
  set_tests_properties(medium_sat PROPERTIES  _BACKTRACE_TRIPLES "D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;28;add_test;D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(medium_sat "D:/PitonMert/GitHub/sat_solver_ai/build/sat_solver_ai" "D:/PitonMert/GitHub/sat_solver_ai/test/medium_sat.cnf")
  set_tests_properties(medium_sat PROPERTIES  _BACKTRACE_TRIPLES "D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;28;add_test;D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(medium_sat "D:/PitonMert/GitHub/sat_solver_ai/build/sat_solver_ai" "D:/PitonMert/GitHub/sat_solver_ai/test/medium_sat.cnf")
  set_tests_properties(medium_sat PROPERTIES  _BACKTRACE_TRIPLES "D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;28;add_test;D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;0;")
else()
  add_test(medium_sat NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(simple_sat "D:/PitonMert/GitHub/sat_solver_ai/build/sat_solver_ai" "D:/PitonMert/GitHub/sat_solver_ai/test/simple_sat.cnf")
  set_tests_properties(simple_sat PROPERTIES  _BACKTRACE_TRIPLES "D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;28;add_test;D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(simple_sat "D:/PitonMert/GitHub/sat_solver_ai/build/sat_solver_ai" "D:/PitonMert/GitHub/sat_solver_ai/test/simple_sat.cnf")
  set_tests_properties(simple_sat PROPERTIES  _BACKTRACE_TRIPLES "D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;28;add_test;D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(simple_sat "D:/PitonMert/GitHub/sat_solver_ai/build/sat_solver_ai" "D:/PitonMert/GitHub/sat_solver_ai/test/simple_sat.cnf")
  set_tests_properties(simple_sat PROPERTIES  _BACKTRACE_TRIPLES "D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;28;add_test;D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(simple_sat "D:/PitonMert/GitHub/sat_solver_ai/build/sat_solver_ai" "D:/PitonMert/GitHub/sat_solver_ai/test/simple_sat.cnf")
  set_tests_properties(simple_sat PROPERTIES  _BACKTRACE_TRIPLES "D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;28;add_test;D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;0;")
else()
  add_test(simple_sat NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(simple_unsat "D:/PitonMert/GitHub/sat_solver_ai/build/sat_solver_ai" "D:/PitonMert/GitHub/sat_solver_ai/test/simple_unsat.cnf")
  set_tests_properties(simple_unsat PROPERTIES  _BACKTRACE_TRIPLES "D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;28;add_test;D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(simple_unsat "D:/PitonMert/GitHub/sat_solver_ai/build/sat_solver_ai" "D:/PitonMert/GitHub/sat_solver_ai/test/simple_unsat.cnf")
  set_tests_properties(simple_unsat PROPERTIES  _BACKTRACE_TRIPLES "D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;28;add_test;D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(simple_unsat "D:/PitonMert/GitHub/sat_solver_ai/build/sat_solver_ai" "D:/PitonMert/GitHub/sat_solver_ai/test/simple_unsat.cnf")
  set_tests_properties(simple_unsat PROPERTIES  _BACKTRACE_TRIPLES "D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;28;add_test;D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(simple_unsat "D:/PitonMert/GitHub/sat_solver_ai/build/sat_solver_ai" "D:/PitonMert/GitHub/sat_solver_ai/test/simple_unsat.cnf")
  set_tests_properties(simple_unsat PROPERTIES  _BACKTRACE_TRIPLES "D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;28;add_test;D:/PitonMert/GitHub/sat_solver_ai/CMakeLists.txt;0;")
else()
  add_test(simple_unsat NOT_AVAILABLE)
endif()
